services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgresdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - default

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - default

  web:
    build: .
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./src:/app/src
      - ./alembic.ini:/app/alembic.ini
      - ./migrations:/app/migrations
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql+asyncpg://username:password@db:5432/postgresdb
      - SYNC_DATABASE_URL=postgresql://username:password@db:5432/postgresdb
      - SECRET_KEY=your_super_secret_key_here_change_me
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    working_dir: /app/src

  # A2A Agent Services
  langchain-agent:
    build:
      context: .
      dockerfile: Dockerfile.langchain
    ports:
      - "8100:8000"
    environment:
      - PYTHONPATH=/app/src
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  pydantic-ai-agent:
    build:
      context: .
      dockerfile: Dockerfile.pydantic_ai
    ports:
      - "8101:8001"
    environment:
      - PYTHONPATH=/app/src
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  a2a-chatbot:
    build: .
    command: python -m assistant.chatbot_api
    ports:
      - "8102:8002"
    depends_on:
      - db
      - redis
      - langchain-agent
      - pydantic-ai-agent
    environment:
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql+asyncpg://username:password@db:5432/postgresdb
      - SYNC_DATABASE_URL=postgresql://username:password@db:5432/postgresdb
      - SECRET_KEY=your_super_secret_key_here_change_me
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    volumes:
      - ./src:/app/src
    working_dir: /app/src
    restart: unless-stopped

  celery:
    build: .
    command: celery -A celery_app.celery_app worker --loglevel=info
    volumes:
      - ./src:/app/src
    depends_on:
      - redis
      - db
    environment:
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql+asyncpg://username:password@db:5432/postgresdb
      - SYNC_DATABASE_URL=postgresql://username:password@db:5432/postgresdb
      - SECRET_KEY=your_super_secret_key_here_change_me
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    working_dir: /app/src

  celery-beat:
    build: .
    command: celery -A celery_app.celery_app beat --loglevel=info
    volumes:
      - ./src:/app/src
    depends_on:
      - redis
      - db
    environment:
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql+asyncpg://username:password@db:5432/postgresdb
      - SYNC_DATABASE_URL=postgresql://username:password@db:5432/postgresdb
      - SECRET_KEY=your_super_secret_key_here_change_me
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    working_dir: /app/src

volumes:
  postgres_data:
  redis_data:
